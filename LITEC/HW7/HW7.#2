/*	Name: Grayson Gerlich
	Section: 2
	Side: B
	Date: 10/1/2018

	Gain: 0.5
	Port pin: 1.4

	File name: hw7.c
	Description: 

*/

#include <c8051_SDCC.h>// include files. This file is available online
#include <stdio.h>


//-----------------------------------------------------------------------------
// Function Prototypes
//-----------------------------------------------------------------------------
void ADC_Init(void);
void Port_Init(void);
unsigned char read_AD_input(unsigned char pin_number);



//-----------------------------------------------------------------------------
// Global Variables
//-----------------------------------------------------------------------------

unsigned int result;
unsigned int voltage;
unsigned char input;

//***************
void main(void)
{
	Sys_Init();      // System Initialization
	putchar(' ');    // the quote fonts may not copy correctly into SiLabs IDE
	Port_Init(); 
	ADC_Init();
	printf("Start \r\n");
    while (1) 
    {
		printf("enter key to read A/D input \r\n");
		input = getchar();

		// add code necessary to complete the homework

		
		result = read_AD_input(4);

		printf("Raw value from the AD is %i", result);	// print statement as required by homework

		voltage = (result * 19);

		printf("That corresponds to %i mv", voltage);	// print statement as required by homework

    }
}


//
// add the initialization code needed for the ADC1
//
void ADC_Init(void)
{
 	REF0CN = 0x03; // Set Vref to use internal reference voltage (2.4V) 
 	ADC1CN = 0x80; // Enable A/D converter (ADC1) 
 	ADC1CF |= 0x00; // Set A/D converter gain to 0.5 
}
//
// function that completes an A/D conversion
//
unsigned char read_AD_input(unsigned char pin_number)
{
 	AMX1SL = pin_number; // Set P1.pin_number as the analog input for ADC1 
 	ADC1CN = ADC1CN & ~0x20; // Clear the “Conversion Completed” flag 
 	ADC1CN = ADC1CN | 0x10; // Initiate A/D conversion 
 	while ((ADC1CN & 0x20) == 0x00); // Wait for conversion to complete 
	return ADC1;
}

//
// add Port initialization code
//
void Port_Init(void)
{
	P1MDIN &= ~0x10; // Set P1.4 for analog input 
 	P1MDOUT &= ~0x10; // Set P1.4 to open drain 
 	P1 |= 0x10; // Send logic 1 to input pin P1.4 for impedance 
}

